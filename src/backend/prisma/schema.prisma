// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ACCOUNT MODELS
model User {
  id             String          @id @default(uuid()) @db.VarChar(50)
  userName       String          @unique @db.VarChar(25)
  nickName       String          @db.VarChar(25)
  passwordHash   String          @db.VarChar(256)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
  profile        Profile?
  productReviews ProductReview[]
  products       Product[]
  Shipping       Shipping[]
}

model Profile {
  id           String   @id @default(uuid()) @db.VarChar(50)
  userId       String   @unique @db.VarChar(50)
  firstName    String   @db.VarChar(25)
  middleName   String?  @db.VarChar(25)
  lastName     String   @db.VarChar(25)
  emailAddress String   @unique @db.VarChar(128)
  phoneNumber  String   @db.VarChar(25)
  birthDate    DateTime
  gender       String   @db.VarChar(25)
  photoUrl     String?  @db.VarChar(256)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  user         User     @relation(fields: [userId], references: [id])
}


// PRODUCT MODELS
model Category {
  id          String    @id @default(uuid()) @db.VarChar(50)
  name        String    @unique @db.VarChar(25)
  description String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  products    Product[]
}

model Size {
  id           String        @id @default(uuid()) @db.VarChar(50)
  name         String        @unique @db.VarChar(25)
  description  String        @db.Text
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @default(now())
  productSizes ProductSize[]
}

model Colour {
  id             String          @id @default(uuid()) @db.VarChar(50)
  name           String          @unique @db.VarChar(25)
  description    String          @db.Text
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
  productColours ProductColour[]
}

model Product {
  id             String          @id @default(uuid()) @db.VarChar(50)
  categoryId     String          @db.VarChar(50)
  userId         String          @db.VarChar(50)
  name           String          @unique @db.VarChar(255)
  code           String          @unique @db.VarChar(25)
  sku            String          @unique @db.VarChar(25)
  description    String          @db.Text
  releaseDate    DateTime?
  price          Decimal         @db.Decimal(10, 2)
  starRating     Decimal         @db.Decimal(10, 2)
  imageUrl       String?         @db.VarChar(128)
  videoUrl       String?         @db.VarChar(128)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
  category       Category        @relation(fields: [categoryId], references: [id])
  user           User            @relation(fields: [userId], references: [id])
  productImages  ProductImage[]
  productSizes   ProductSize[]
  productColours ProductColour[]
  productReviews ProductReview[]
  CartItem       CartItem[]
}

model ProductImage {
  id        String   @id @default(uuid()) @db.VarChar(50)
  productId String   @db.VarChar(50)
  imageUrl  String   @db.VarChar(128)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
}

model ProductSize {
  id        String   @id @default(uuid()) @db.VarChar(50)
  productId String   @db.VarChar(50)
  sizeId    String   @db.VarChar(50)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  size      Size     @relation(fields: [sizeId], references: [id])
}

model ProductColour {
  id        String   @id @default(uuid()) @db.VarChar(50)
  productId String   @db.VarChar(50)
  colourId  String   @db.VarChar(50)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  product   Product  @relation(fields: [productId], references: [id])
  colour    Colour   @relation(fields: [colourId], references: [id])
}

model ProductReview {
  id         String   @id @default(uuid()) @db.VarChar(50)
  productId  String   @db.VarChar(50)
  userId     String   @db.VarChar(50)
  review     String   @db.Text
  starRating Decimal  @db.Decimal(10, 2)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @default(now())
  product    Product  @relation(fields: [productId], references: [id])
  user       User     @relation(fields: [userId], references: [id])
}


// CUSTOMER MODELS
model Customer {
  id           String     @id @default(uuid()) @db.VarChar(50)
  firstName    String     @db.VarChar(25)
  middleName   String?    @db.VarChar(25)
  lastName     String     @db.VarChar(25)
  emailAddress String     @unique @db.VarChar(128)
  phoneNumber  String     @db.VarChar(25)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())
  shippings    Shipping[]
  billings     Billing[]
  carts        Cart[]
}

model Billing {
  id           String   @id @default(uuid()) @db.VarChar(50)
  customerId   String   @db.VarChar(50)
  firstName    String   @db.VarChar(25)
  middleName   String?  @db.VarChar(25)
  lastName     String   @db.VarChar(25)
  emailAddress String   @unique @db.VarChar(128)
  phoneNumber  String   @db.VarChar(25)
  companyName  String   @db.VarChar(128)
  country      String   @db.VarChar(25)
  region       String   @db.VarChar(25)
  city         String   @db.VarChar(25)
  address1     String   @db.VarChar(128)
  address2     String   @db.VarChar(128)
  postalCode   String   @db.VarChar(25)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  customer     Customer @relation(fields: [customerId], references: [id])
}

model Shipping {
  id           String   @id @default(uuid()) @db.VarChar(50)
  customerId   String   @db.VarChar(50)
  firstName    String   @db.VarChar(25)
  middleName   String?  @db.VarChar(25)
  lastName     String   @db.VarChar(25)
  emailAddress String   @unique @db.VarChar(128)
  phoneNumber  String   @db.VarChar(25)
  companyName  String   @db.VarChar(128)
  country      String   @db.VarChar(25)
  region       String   @db.VarChar(25)
  city         String   @db.VarChar(25)
  address1     String   @db.VarChar(128)
  address2     String   @db.VarChar(128)
  postalCode   String   @db.VarChar(25)
  orderNotes   String   @db.Text
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now())
  customer     Customer @relation(fields: [customerId], references: [id])
  User         User?    @relation(fields: [userId], references: [id])
  userId       String?  @db.VarChar(50)
}


// SALES MODELS
model DeliveryOption {
  id          String   @id @default(uuid()) @db.VarChar(50)
  name        String   @unique @db.VarChar(25)
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  carts       Cart[]
}

model PaymentOption {
  id          String   @id @default(uuid()) @db.VarChar(50)
  name        String   @unique @db.VarChar(25)
  description String   @db.Text
  createdAt   DateTime @default(now())
  updatedAt   DateTime @default(now())
  carts       Cart[]
}

model Tax {
  id          String    @id @default(uuid()) @db.VarChar(50)
  name        String    @unique @db.VarChar(25)
  fixedAmount Decimal   @db.Decimal(10, 2)
  percentage  Decimal   @db.Decimal(10, 2)
  description String    @db.Text
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
  cartTaxes   CartTax[]
}

model Cart {
  id               String         @id @default(uuid()) @db.VarChar(50)
  customerId       String         @db.VarChar(50)
  paymentOptionId  String         @db.VarChar(50)
  deliveryOptionId String         @db.VarChar(50)
  itemsCount       Int            @db.Int
  subTotal         Decimal        @db.Decimal(10, 2)
  deliveryFee      Decimal        @db.Decimal(10, 2)
  discount         Decimal        @db.Decimal(10, 2)
  taxTotal         Decimal        @db.Decimal(10, 2)
  total            Decimal        @db.Decimal(10, 2)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  customer         Customer       @relation(fields: [customerId], references: [id])
  paymentOption    PaymentOption  @relation(fields: [paymentOptionId], references: [id])
  deliveryOption   DeliveryOption @relation(fields: [deliveryOptionId], references: [id])
  cartItems        CartItem[]
  cartTaxes        CartTax[]
}

model CartItem {
  id        String   @id @default(uuid()) @db.VarChar(50)
  cartId    String   @db.VarChar(50)
  productId String   @db.VarChar(50)
  price     Decimal  @db.Decimal(10, 2)
  quantity  Int      @db.Int
  subTotal  Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  cart      Cart     @relation(fields: [cartId], references: [id])
  product   Product  @relation(fields: [productId], references: [id])
}

model CartTax {
  id        String   @id @default(uuid()) @db.VarChar(50)
  cartId    String   @db.VarChar(50)
  taxId     String   @db.VarChar(50)
  taxAmount Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  cart      Cart     @relation(fields: [cartId], references: [id])
  tax       Tax      @relation(fields: [taxId], references: [id])
}
